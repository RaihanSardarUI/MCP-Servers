---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="MCP Directory - Discover MCP Servers">
  <!-- Hero Section -->
  <section class="hero bg-gradient-to-r from-primary to-secondary text-white min-h-[60vh]">
    <div class="hero-content text-center">
      <div class="max-w-md">
        <h1 class="text-5xl font-bold mb-6">MCP Directory</h1>
        <p class="text-xl mb-8">
          Discover and share Model Context Protocol servers and tools
        </p>
        <div class="flex gap-4 justify-center">
          <a href="/servers" class="btn btn-accent btn-lg">
            Browse Servers
          </a>
          <a href="/auth/register" class="btn btn-outline btn-lg">
            Add Your Server
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Search Section -->
  <section class="py-16 bg-base-200">
    <div class="container mx-auto px-4">
      <div class="max-w-2xl mx-auto">
        <div class="form-control">
          <div class="input-group">
            <input 
              type="text" 
              placeholder="Search MCP servers..." 
              class="input input-bordered w-full"
              id="search-input"
            />
            <button class="btn btn-primary" onclick="searchServers()">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </button>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-2 mt-4 justify-center">
          <button class="btn btn-outline btn-sm" onclick="filterByTag('npm')">npm</button>
          <button class="btn btn-outline btn-sm" onclick="filterByTag('python')">python</button>
          <button class="btn btn-outline btn-sm" onclick="filterByTag('typescript')">typescript</button>
          <button class="btn btn-outline btn-sm" onclick="filterByTag('ai')">ai</button>
          <button class="btn btn-outline btn-sm" onclick="filterByTag('tool')">tool</button>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Servers Section -->
  <section class="py-16">
    <div class="container mx-auto px-4">
      <h2 class="text-3xl font-bold text-center mb-12">Featured Servers</h2>
      
      <div id="featured-servers" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Server cards will be loaded here -->
      </div>
      
      <div class="text-center mt-12">
        <a href="/servers" class="btn btn-primary btn-lg">
          View All Servers
        </a>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="py-16 bg-base-200">
    <div class="container mx-auto px-4">
      <div class="stats stats-vertical lg:stats-horizontal shadow w-full">
        <div class="stat">
          <div class="stat-title">Total Servers</div>
          <div class="stat-value text-primary" id="total-servers">0</div>
          <div class="stat-desc">Growing daily</div>
        </div>
        
        <div class="stat">
          <div class="stat-title">Contributors</div>
          <div class="stat-value text-secondary" id="total-contributors">0</div>
          <div class="stat-desc">Community members</div>
        </div>
        
        <div class="stat">
          <div class="stat-title">GitHub Stars</div>
          <div class="stat-value text-accent" id="total-stars">0</div>
          <div class="stat-desc">Across all projects</div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-16 bg-gradient-to-r from-secondary to-accent text-white">
    <div class="container mx-auto px-4 text-center">
      <h2 class="text-3xl font-bold mb-6">Ready to Share Your MCP Server?</h2>
      <p class="text-xl mb-8 max-w-2xl mx-auto">
        Join our growing community of developers building the future of AI tooling
      </p>
      <a href="/auth/register" class="btn btn-primary btn-lg">
        Get Started
      </a>
    </div>
  </section>
</BaseLayout>

<script>
  // Load featured servers
  async function loadFeaturedServers() {
    try {
      const response = await fetch('/api/servers?limit=6&sort=stars');
      const data = await response.json();
      
      if (data.success) {
        const container = document.getElementById('featured-servers');
        container.innerHTML = '';
        
        data.servers.forEach(server => {
          const serverCard = createServerCard(server);
          container.appendChild(serverCard);
        });
        
        // Update stats
        document.getElementById('total-servers').textContent = data.servers.length;
        document.getElementById('total-contributors').textContent = new Set(data.servers.map(s => s.owner_name)).size;
        document.getElementById('total-stars').textContent = data.servers.reduce((sum, s) => sum + s.stars, 0);
      }
    } catch (error) {
      console.error('Error loading featured servers:', error);
    }
  }
  
  function createServerCard(server) {
    const card = document.createElement('div');
    card.className = 'card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300';
    
    card.innerHTML = `
      <div class="card-body">
        <div class="flex items-start gap-4">
          <div class="avatar">
            <div class="w-12 h-12 rounded-lg">
              <img src="${server.logo_url || `https://api.dicebear.com/7.x/initials/svg?seed=${encodeURIComponent(server.name)}`}" alt="${server.name}" />
            </div>
          </div>
          
          <div class="flex-1">
            <h2 class="card-title text-lg">
              <a href="/servers/${server.slug}" class="link link-hover">${server.name}</a>
            </h2>
            
            <p class="text-sm text-base-content/70 mt-1 line-clamp-2">
              ${server.description || 'No description available'}
            </p>
            
            <div class="flex items-center gap-4 mt-3 text-sm text-base-content/60">
              <div class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
                <span>${server.stars}</span>
              </div>
              
              <div class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M7.707 3.293a1 1 0 010 1.414L5.414 7H11a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5H5.414l2.293 2.293a1 1 0 11-1.414 1.414L2.586 7l3.707-3.707a1 1 0 011.414 0z" clip-rule="evenodd"/>
                </svg>
                <span>${server.forks}</span>
              </div>
            </div>
            
            <div class="flex items-center gap-2 mt-3">
              <div class="avatar">
                <div class="w-6 h-6 rounded-full">
                  <img src="${server.owner_avatar}" alt="${server.owner_name}" />
                </div>
              </div>
              <span class="text-sm text-base-content/70">${server.owner_name}</span>
            </div>
          </div>
        </div>
        
        ${server.tags.length > 0 ? `
          <div class="flex flex-wrap gap-1 mt-4">
            ${server.tags.slice(0, 3).map(tag => `<span class="badge badge-outline badge-sm">${tag}</span>`).join('')}
            ${server.tags.length > 3 ? `<span class="badge badge-outline badge-sm">+${server.tags.length - 3}</span>` : ''}
          </div>
        ` : ''}
        
        <div class="card-actions justify-end mt-4">
          <a href="/servers/${server.slug}" class="btn btn-primary btn-sm">
            View Details
          </a>
        </div>
      </div>
    `;
    
    return card;
  }
  
  function searchServers() {
    const query = document.getElementById('search-input').value;
    if (query.trim()) {
      window.location.href = `/servers?search=${encodeURIComponent(query)}`;
    }
  }
  
  function filterByTag(tag) {
    window.location.href = `/servers?tag=${encodeURIComponent(tag)}`;
  }
  
  // Handle search on Enter key
  document.getElementById('search-input').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      searchServers();
    }
  });
  
  // Load data on page load
  document.addEventListener('DOMContentLoaded', loadFeaturedServers);
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
